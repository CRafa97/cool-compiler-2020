
.CODE
function main {
	

	LOCAL instance_0
	LOCAL result_1

	instance_0 = ALLOCATE Main
	result_1 = CALL Main_init
	result_1 = CALL Main.main
	
 RETURN 
}
function Object_init {
	PARAM self

	

	
 RETURN 
}
function Object.abort {
	PARAM self

	LOCAL msg_0
	LOCAL type_name_1
	LOCAL eol_2

	msg_0 = LOAD s_0
	PRINT_STR msg_0
	type_name_1 = TYPEOF self
	PRINT_STR type_name_1
	eol_2 = LOAD s_1
	PRINT_STR eol_2
	HALT
}
function Object.type_name {
	PARAM self

	LOCAL type_name_0
	LOCAL instance_1
	LOCAL result_init_2

	type_name_0 = TYPEOF self
	instance_1 = ALLOCATE String
	result_init_2 = CALL String_init
	
 RETURN instance_1
}
function Object.copy {
	PARAM self

	LOCAL copy_0

	copy_0 = COPY self
	
 RETURN copy_0
}
function IO_init {
	PARAM self

	

	
 RETURN 
}
function IO.out_string {
	PARAM self
	PARAM x

	LOCAL v_0

	v_0 = GetAttr x value 
	PRINT_STR v_0
	
 RETURN self
}
function IO.out_int {
	PARAM self
	PARAM x

	LOCAL v_0

	v_0 = GetAttr x value 
	PRINT_INT v_0
	
 RETURN self
}
function IO.in_string {
	PARAM self

	LOCAL read_str_0
	LOCAL instance_1
	LOCAL result_init_2

	read_str_0 = READ STR
	instance_1 = ALLOCATE String
	result_init_2 = CALL String_init
	
 RETURN instance_1
}
function IO.in_int {
	PARAM self

	LOCAL read_int_0
	LOCAL instance_1
	LOCAL result_init_2

	read_int_0 = READ INT
	instance_1 = ALLOCATE Int
	result_init_2 = CALL Int_init
	
 RETURN instance_1
}
function String_init {
	PARAM self
	PARAM v

	

	SetAttr self value v
	
 RETURN 
}
function String.length {
	PARAM self

	LOCAL length_0
	LOCAL instance_1
	LOCAL result_init_2

	length_0 = LENGTH self
	instance_1 = ALLOCATE Int
	result_init_2 = CALL Int_init
	
 RETURN instance_1
}
function String.concat {
	PARAM self
	PARAM s

	LOCAL str1_0
	LOCAL len1_1
	LOCAL str2_2
	LOCAL len2_3
	LOCAL local_len1_4
	LOCAL local_len2_5
	LOCAL concat_6
	LOCAL instance_7
	LOCAL result_init_8

	str1_0 = GetAttr self value 
	len1_1 = CALL String.length
	str2_2 = GetAttr s value 
	len2_3 = CALL String.length
	local_len1_4 = GetAttr len1_1 value 
	local_len2_5 = GetAttr len2_3 value 
	concat_6 = CONCAT str1_0  str2_2
	instance_7 = ALLOCATE String
	result_init_8 = CALL String_init
	
 RETURN instance_7
}
function String.substr {
	PARAM self
	PARAM i
	PARAM l

	LOCAL i_value_0
	LOCAL l_value_1
	LOCAL subs_result_2
	LOCAL instance_3
	LOCAL result_init_4

	i_value_0 = GetAttr i value 
	l_value_1 = GetAttr l value 
	subs_result_2 = SUBSTR i_value_0  l_value_1  self
	instance_3 = ALLOCATE String
	result_init_4 = CALL String_init
	
 RETURN instance_3
}
function Bool_init {
	PARAM self
	PARAM v

	

	SetAttr self value v
	
 RETURN 
}
function Int_init {
	PARAM self
	PARAM v

	

	SetAttr self value v
	
 RETURN 
}
function String_equals {
	PARAM str1
	PARAM str2

	LOCAL str1_0
	LOCAL str2_1
	LOCAL comparison_result_2

	str1_0 = GetAttr str1 value 
	str2_1 = GetAttr str2 value 
	comparison_result_2 = str1_0 = str2_1
	
 RETURN comparison_result_2
}
function CellularAutomaton_init {
	PARAM self

	LOCAL result_0
	LOCAL instance_1
	LOCAL value_2
	LOCAL result_init_3

	result_0 = CALL IO_init
	
 RETURN 
	instance_1 = ALLOCATE String
	value_2 = LOAD empty_str
	result_init_3 = CALL String_init
	SetAttr self population_map instance_1
}
function CellularAutomaton.init {
	PARAM self
	PARAM map

	LOCAL result_0

	SetAttr self population_map map
	
 RETURN self
}
function CellularAutomaton.print {
	PARAM self

	LOCAL result_0
	LOCAL result_1
	LOCAL population_map_2
	LOCAL internal_3
	LOCAL instance_4
	LOCAL result_init_5

	population_map_2 = GetAttr self population_map 
	internal_3 = LOAD s_3
	instance_4 = ALLOCATE String
	result_init_5 = CALL String_init
	result_1 = VCALL String concat 
	result_0 = VCALL CellularAutomaton out_string 
	
 RETURN self
}
function CellularAutomaton.num_cells {
	PARAM self

	LOCAL result_0
	LOCAL population_map_1

	population_map_1 = GetAttr self population_map 
	result_0 = VCALL String length 
	
 RETURN result_0
}
function CellularAutomaton.cell {
	PARAM self
	PARAM position

	LOCAL result_0
	LOCAL population_map_1
	LOCAL instance_2
	LOCAL value_3
	LOCAL result_init_4

	population_map_1 = GetAttr self population_map 
	instance_2 = ALLOCATE Int
	value_3 = LOAD 1
	result_init_4 = CALL Int_init
	result_0 = VCALL String substr 
	
 RETURN result_0
}
function CellularAutomaton.cell_left_neighbor {
	PARAM self
	PARAM position

	LOCAL result_0
	LOCAL result_1
	LOCAL op_2
	LOCAL left_3
	LOCAL right_4
	LOCAL instance_5
	LOCAL value_6
	LOCAL result_init_7
	LOCAL result_init_8
	LOCAL result_9
	LOCAL result_10
	LOCAL op_11
	LOCAL left_12
	LOCAL right_13
	LOCAL instance_14
	LOCAL value_15
	LOCAL result_init_16
	LOCAL result_init_17
	LOCAL result_18
	LOCAL result_19
	LOCAL op_20
	LOCAL left_21
	LOCAL right_22
	LOCAL result_23
	LOCAL instance_24
	LOCAL value_25
	LOCAL result_init_26
	LOCAL result_init_27

	instance_5 = ALLOCATE Int
	value_6 = LOAD 0
	result_init_7 = CALL Int_init
	left_3 = GetAttr position value 
	right_4 = GetAttr instance_5 value 
	op_2 = left_3 = right_4
	result_1 = ALLOCATE Bool
	result_init_8 = CALL Bool_init
	IF result_1 GOTO label_1
	instance_14 = ALLOCATE Int
	value_15 = LOAD 1
	result_init_16 = CALL Int_init
	left_12 = GetAttr position value 
	right_13 = GetAttr instance_14 value 
	op_11 = left_12 - right_13
	result_10 = ALLOCATE Int
	result_init_17 = CALL Int_init
	result_9 = VCALL CellularAutomaton cell 
	result_0 = result_9
	GOTO label_2
	LABEL label_1
	result_23 = VCALL CellularAutomaton num_cells 
	instance_24 = ALLOCATE Int
	value_25 = LOAD 1
	result_init_26 = CALL Int_init
	left_21 = GetAttr result_23 value 
	right_22 = GetAttr instance_24 value 
	op_20 = left_21 - right_22
	result_19 = ALLOCATE Int
	result_init_27 = CALL Int_init
	result_18 = VCALL CellularAutomaton cell 
	result_0 = result_18
	LABEL label_2
	
 RETURN result_0
}
function CellularAutomaton.cell_right_neighbor {
	PARAM self
	PARAM position

	LOCAL result_0
	LOCAL result_1
	LOCAL op_2
	LOCAL left_3
	LOCAL right_4
	LOCAL result_5
	LOCAL op_6
	LOCAL left_7
	LOCAL right_8
	LOCAL result_9
	LOCAL instance_10
	LOCAL value_11
	LOCAL result_init_12
	LOCAL result_init_13
	LOCAL result_init_14
	LOCAL result_15
	LOCAL result_16
	LOCAL op_17
	LOCAL left_18
	LOCAL right_19
	LOCAL instance_20
	LOCAL value_21
	LOCAL result_init_22
	LOCAL result_init_23
	LOCAL result_24
	LOCAL instance_25
	LOCAL value_26
	LOCAL result_init_27

	result_9 = VCALL CellularAutomaton num_cells 
	instance_10 = ALLOCATE Int
	value_11 = LOAD 1
	result_init_12 = CALL Int_init
	left_7 = GetAttr result_9 value 
	right_8 = GetAttr instance_10 value 
	op_6 = left_7 - right_8
	result_5 = ALLOCATE Int
	result_init_13 = CALL Int_init
	left_3 = GetAttr position value 
	right_4 = GetAttr result_5 value 
	op_2 = left_3 = right_4
	result_1 = ALLOCATE Bool
	result_init_14 = CALL Bool_init
	IF result_1 GOTO label_3
	instance_20 = ALLOCATE Int
	value_21 = LOAD 1
	result_init_22 = CALL Int_init
	left_18 = GetAttr position value 
	right_19 = GetAttr instance_20 value 
	op_17 = left_18 + right_19
	result_16 = ALLOCATE Int
	result_init_23 = CALL Int_init
	result_15 = VCALL CellularAutomaton cell 
	result_0 = result_15
	GOTO label_4
	LABEL label_3
	instance_25 = ALLOCATE Int
	value_26 = LOAD 0
	result_init_27 = CALL Int_init
	result_24 = VCALL CellularAutomaton cell 
	result_0 = result_24
	LABEL label_4
	
 RETURN result_0
}
function CellularAutomaton.cell_at_next_evolution {
	PARAM self
	PARAM position

	LOCAL result_0
	LOCAL result_1
	LOCAL op_2
	LOCAL left_3
	LOCAL right_4
	LOCAL result_5
	LOCAL op_6
	LOCAL left_7
	LOCAL right_8
	LOCAL result_9
	LOCAL op_10
	LOCAL left_11
	LOCAL right_12
	LOCAL result_13
	LOCAL result_14
	LOCAL op_15
	LOCAL left_16
	LOCAL right_17
	LOCAL result_18
	LOCAL internal_19
	LOCAL instance_20
	LOCAL result_init_21
	LOCAL result_init_22
	LOCAL instance_23
	LOCAL value_24
	LOCAL result_init_25
	LOCAL instance_26
	LOCAL value_27
	LOCAL result_init_28
	LOCAL result_29
	LOCAL result_30
	LOCAL op_31
	LOCAL left_32
	LOCAL right_33
	LOCAL result_34
	LOCAL internal_35
	LOCAL instance_36
	LOCAL result_init_37
	LOCAL result_init_38
	LOCAL instance_39
	LOCAL value_40
	LOCAL result_init_41
	LOCAL instance_42
	LOCAL value_43
	LOCAL result_init_44
	LOCAL result_init_45
	LOCAL result_46
	LOCAL result_47
	LOCAL op_48
	LOCAL left_49
	LOCAL right_50
	LOCAL result_51
	LOCAL internal_52
	LOCAL instance_53
	LOCAL result_init_54
	LOCAL result_init_55
	LOCAL instance_56
	LOCAL value_57
	LOCAL result_init_58
	LOCAL instance_59
	LOCAL value_60
	LOCAL result_init_61
	LOCAL result_init_62
	LOCAL instance_63
	LOCAL value_64
	LOCAL result_init_65
	LOCAL result_init_66
	LOCAL internal_67
	LOCAL instance_68
	LOCAL result_init_69
	LOCAL internal_70
	LOCAL instance_71
	LOCAL result_init_72

	result_18 = VCALL CellularAutomaton cell 
	internal_19 = LOAD s_4
	instance_20 = ALLOCATE String
	result_init_21 = CALL String_init
	left_16 = GetAttr result_18 value 
	right_17 = GetAttr instance_20 value 
	op_15 = left_16 = right_17
	result_14 = ALLOCATE Bool
	result_init_22 = CALL Bool_init
	IF result_14 GOTO label_5
	instance_23 = ALLOCATE Int
	value_24 = LOAD 0
	result_init_25 = CALL Int_init
	result_13 = instance_23
	GOTO label_6
	LABEL label_5
	instance_26 = ALLOCATE Int
	value_27 = LOAD 1
	result_init_28 = CALL Int_init
	result_13 = instance_26
	LABEL label_6
	result_34 = VCALL CellularAutomaton cell_left_neighbor 
	internal_35 = LOAD s_4
	instance_36 = ALLOCATE String
	result_init_37 = CALL String_init
	left_32 = GetAttr result_34 value 
	right_33 = GetAttr instance_36 value 
	op_31 = left_32 = right_33
	result_30 = ALLOCATE Bool
	result_init_38 = CALL Bool_init
	IF result_30 GOTO label_7
	instance_39 = ALLOCATE Int
	value_40 = LOAD 0
	result_init_41 = CALL Int_init
	result_29 = instance_39
	GOTO label_8
	LABEL label_7
	instance_42 = ALLOCATE Int
	value_43 = LOAD 1
	result_init_44 = CALL Int_init
	result_29 = instance_42
	LABEL label_8
	left_11 = GetAttr result_13 value 
	right_12 = GetAttr result_29 value 
	op_10 = left_11 + right_12
	result_9 = ALLOCATE Int
	result_init_45 = CALL Int_init
	result_51 = VCALL CellularAutomaton cell_right_neighbor 
	internal_52 = LOAD s_4
	instance_53 = ALLOCATE String
	result_init_54 = CALL String_init
	left_49 = GetAttr result_51 value 
	right_50 = GetAttr instance_53 value 
	op_48 = left_49 = right_50
	result_47 = ALLOCATE Bool
	result_init_55 = CALL Bool_init
	IF result_47 GOTO label_9
	instance_56 = ALLOCATE Int
	value_57 = LOAD 0
	result_init_58 = CALL Int_init
	result_46 = instance_56
	GOTO label_10
	LABEL label_9
	instance_59 = ALLOCATE Int
	value_60 = LOAD 1
	result_init_61 = CALL Int_init
	result_46 = instance_59
	LABEL label_10
	left_7 = GetAttr result_9 value 
	right_8 = GetAttr result_46 value 
	op_6 = left_7 + right_8
	result_5 = ALLOCATE Int
	result_init_62 = CALL Int_init
	instance_63 = ALLOCATE Int
	value_64 = LOAD 1
	result_init_65 = CALL Int_init
	left_3 = GetAttr result_5 value 
	right_4 = GetAttr instance_63 value 
	op_2 = left_3 = right_4
	result_1 = ALLOCATE Bool
	result_init_66 = CALL Bool_init
	IF result_1 GOTO label_11
	internal_67 = LOAD s_5
	instance_68 = ALLOCATE String
	result_init_69 = CALL String_init
	result_0 = instance_68
	GOTO label_12
	LABEL label_11
	internal_70 = LOAD s_4
	instance_71 = ALLOCATE String
	result_init_72 = CALL String_init
	result_0 = instance_71
	LABEL label_12
	
 RETURN result_0
}
function CellularAutomaton.evolve {
	PARAM self

	LOCAL position_0
	LOCAL result_1
	LOCAL num_2
	LOCAL temp_3
	LOCAL result_4
	LOCAL result_5
	LOCAL op_6
	LOCAL left_7
	LOCAL right_8
	LOCAL result_init_9
	LOCAL result_10
	LOCAL result_11
	LOCAL result_12
	LOCAL result_13
	LOCAL op_14
	LOCAL left_15
	LOCAL right_16
	LOCAL instance_17
	LOCAL value_18
	LOCAL result_init_19
	LOCAL result_init_20
	LOCAL result_21
	LOCAL result_22
	LOCAL let_result_23
	LOCAL let_result_24
	LOCAL let_result_25

	position_0 = []
	result_1 = VCALL CellularAutomaton num_cells 
	num_2 = result_1
	temp_3 = []
	LABEL label_13
	left_7 = GetAttr position_0 value 
	right_8 = GetAttr num_2 value 
	op_6 = left_7 < right_8
	result_5 = ALLOCATE Bool
	result_init_9 = CALL Bool_init
	IF result_5 GOTO label_14
	GOTO label_15
	LABEL label_14
	result_11 = VCALL CellularAutomaton cell_at_next_evolution 
	result_10 = VCALL String concat 
	temp_3 = result_10
	instance_17 = ALLOCATE Int
	value_18 = LOAD 1
	result_init_19 = CALL Int_init
	left_15 = GetAttr position_0 value 
	right_16 = GetAttr instance_17 value 
	op_14 = left_15 + right_16
	result_13 = ALLOCATE Int
	result_init_20 = CALL Int_init
	position_0 = result_13
	GOTO label_13
	LABEL label_15
	result_4 = LOAD None
	SetAttr self population_map temp_3
	let_result_23 = self
	let_result_24 = let_result_23
	let_result_25 = let_result_24
	
 RETURN let_result_25
}
function Main_init {
	PARAM self

	LOCAL result_0

	result_0 = CALL Object_init
	
 RETURN 
	SetAttr self cells None
}
function Main.main {
	PARAM self

	LOCAL result_0
	LOCAL result_1
	LOCAL init_2
	LOCAL internal_3
	LOCAL instance_4
	LOCAL result_init_5
	LOCAL result_6
	LOCAL result_7
	LOCAL cells_8
	LOCAL instance_9
	LOCAL value_10
	LOCAL result_init_11
	LOCAL countdown_12
	LOCAL result_13
	LOCAL result_14
	LOCAL op_15
	LOCAL left_16
	LOCAL right_17
	LOCAL instance_18
	LOCAL value_19
	LOCAL result_init_20
	LOCAL result_init_21
	LOCAL result_22
	LOCAL cells_23
	LOCAL result_24
	LOCAL cells_25
	LOCAL result_26
	LOCAL op_27
	LOCAL left_28
	LOCAL right_29
	LOCAL instance_30
	LOCAL value_31
	LOCAL result_init_32
	LOCAL result_init_33
	LOCAL result_34
	LOCAL let_result_35

	result_1 = ALLOCATE CellularAutomaton
	init_2 = CALL CellularAutomaton_init
	internal_3 = LOAD s_6
	instance_4 = ALLOCATE String
	result_init_5 = CALL String_init
	result_0 = VCALL CellularAutomaton init 
	SetAttr self cells result_0
	cells_8 = GetAttr self cells 
	result_7 = VCALL CellularAutomaton print 
	instance_9 = ALLOCATE Int
	value_10 = LOAD 20
	result_init_11 = CALL Int_init
	countdown_12 = instance_9
	LABEL label_16
	instance_18 = ALLOCATE Int
	value_19 = LOAD 0
	result_init_20 = CALL Int_init
	left_16 = GetAttr instance_18 value 
	right_17 = GetAttr countdown_12 value 
	op_15 = left_16 < right_17
	result_14 = ALLOCATE Bool
	result_init_21 = CALL Bool_init
	IF result_14 GOTO label_17
	GOTO label_18
	LABEL label_17
	cells_23 = GetAttr self cells 
	result_22 = VCALL CellularAutomaton evolve 
	cells_25 = GetAttr self cells 
	result_24 = VCALL CellularAutomaton print 
	instance_30 = ALLOCATE Int
	value_31 = LOAD 1
	result_init_32 = CALL Int_init
	left_28 = GetAttr countdown_12 value 
	right_29 = GetAttr instance_30 value 
	op_27 = left_28 - right_29
	result_26 = ALLOCATE Int
	result_init_33 = CALL Int_init
	countdown_12 = result_26
	GOTO label_16
	LABEL label_18
	result_13 = LOAD None
	let_result_35 = result_13
	
 RETURN self
}