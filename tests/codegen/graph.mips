.data
buffer: .space 2048
strsubstrexception: .asciiz "Substring index exception"

string_1: .asciiz " ("
string_2: .asciiz ","
string_3: .asciiz ")"
string_5: .asciiz "\n"
string_6: .asciiz "\n"
string_8: .asciiz "\n"
string_9: .asciiz ""
string_11: .asciiz "0"
string_13: .asciiz "1"
string_15: .asciiz "2"
string_17: .asciiz "3"
string_19: .asciiz "4"
string_21: .asciiz "5"
string_23: .asciiz "6"
string_25: .asciiz "7"
string_27: .asciiz "8"
string_29: .asciiz "9"
string_32: .asciiz "-"
string_34: .asciiz " "
string_37: .asciiz " "
string_39: .asciiz ","
string_42: .asciiz ""
string_43: .asciiz ""
Object_INH:
String_INH:
.word Object_INH
Int_INH:
.word Object_INH
Bool_INH:
.word Object_INH
IO_INH:
.word Object_INH
SELF_TYPE_INH:
.word Object_INH
Graph_INH:
.word Object_INH
Vertice_INH:
.word IO_INH
Edge_INH:
.word IO_INH
EList_INH:
.word IO_INH
ECons_INH:
.word EList_INH
VList_INH:
.word IO_INH
VCons_INH:
.word VList_INH
Parse_INH:
.word IO_INH
Main_INH:
.word Parse_INH
BoolOp_INH:
.word Object_INH
Int_name: .asciiz "Int"
Int_VT:
.word Int_INH
Bool_name: .asciiz "Bool"
Bool_VT:
.word Bool_INH
String_name: .asciiz "String"
String_VT:
.word String_INH
.word String.length
.word String.concat
.word String.substr
Object_name: .asciiz "Object"
Object_VT:
.word Object_INH
.word Object.abort
.word Object.type_name
.word Object.copy
IO_name: .asciiz "IO"
IO_VT:
.word IO_INH
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
Graph_name: .asciiz "Graph"
Graph_VT:
.word Graph_INH
.word Graph.add_vertice
.word Graph.print_E
.word Graph.print_V
Vertice_name: .asciiz "Vertice"
Vertice_VT:
.word Vertice_INH
.word Vertice.outgoing
.word Vertice.number
.word Vertice.init
.word Vertice.add_out
.word Vertice.print
Edge_name: .asciiz "Edge"
Edge_VT:
.word Edge_INH
.word Edge.init
.word Edge.print
EList_name: .asciiz "EList"
EList_VT:
.word EList_INH
.word EList.isNil
.word EList.head
.word EList.tail
.word EList.cons
.word EList.append
.word EList.print
ECons_name: .asciiz "ECons"
ECons_VT:
.word ECons_INH
.word ECons.isNil
.word ECons.head
.word ECons.tail
.word ECons.init
.word ECons.print
VList_name: .asciiz "VList"
VList_VT:
.word VList_INH
.word VList.isNil
.word VList.head
.word VList.tail
.word VList.cons
.word VList.print
VCons_name: .asciiz "VCons"
VCons_VT:
.word VCons_INH
.word VCons.isNil
.word VCons.head
.word VCons.tail
.word VCons.init
.word VCons.print
Parse_name: .asciiz "Parse"
Parse_VT:
.word Parse_INH
.word Parse.read_input
.word Parse.parse_line
.word Parse.c2i
.word Parse.a2i
.word Parse.a2i_aux
Main_name: .asciiz "Main"
Main_VT:
.word Main_INH
.word Main.main
BoolOp_name: .asciiz "BoolOp"
BoolOp_VT:
.word BoolOp_INH
.word BoolOp.and
.word BoolOp.or

.globl main
.text
IO.out_string:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $v0, 4
lw $a0, 8($sp)
syscall
jr $ra


IO.out_int:
li $v0, 1
lw $a0, -4($sp)
syscall
jr $ra


IO.in_string:
move $a3, $ra
la $a0, buffer
li $a1, 65536
li $v0, 8
syscall
addiu $sp, $sp, -4
sw $a0, 0($sp)
jal String.length
addiu $sp, $sp, 4
move $a2, $v0
addiu $a2, $a2, -1
move $a0, $v0
li $v0, 9
syscall
move $v1, $v0
la $a0, buffer
_in_string.loop:
beqz $a2, _in_string.end
lb $a1, 0($a0)
sb $a1, 0($v1)
addiu $a0, $a0, 1
addiu $v1, $v1, 1
addiu $a2, $a2, -1
j _in_string.loop
_in_string.end:
sb $zero, 0($v1)
move $ra, $a3
jr $ra


IO.in_int:
li $v0, 5
syscall
jr $ra
Object.copy:
lw $a1, -4($sp)
lw $a0, -8($sp)
li $v0, 9
syscall
lw $a1, -4($sp)
lw $a0, 4($a1)
move $a3, $v0
_copy.loop:
lw $a2, 0($a1)
sw $a2, 0($a3)
addiu $a0, $a0, -1
addiu $a1, $a1, 4
addiu $a3, $a3, 4
beq $a0, $zero, _copy.end
j _copy.loop
_copy.end:
jr $ra


Object.abort:
li $v0, 10
syscall


String.length:
lw $a0, -4($sp)
_stringlength.loop:
lb $a1, 0($a0)
beqz $a1, _stringlength.end
addiu $a0, $a0, 1
j _stringlength.loop
_stringlength.end:
lw $a1, -4($sp)
subu $v0, $a0, $a1
jr $ra


String.concat:
move $a2, $ra
jal String.length
move $v1, $v0
addiu $sp, $sp, -4
jal String.length
addiu $sp, $sp, 4
add $v1, $v1, $v0
addi $v1, $v1, 1
li $v0, 9
move $a0, $v1
syscall
move $v1, $v0
lw $a0, 0($sp)
_stringconcat.loop1:
lb $a1, 0($a0)
beqz $a1, _stringconcat.end1
sb $a1, 0($v1)
addiu $a0, $a0, 1
addiu $v1, $v1, 1
j _stringconcat.loop1
_stringconcat.end1:
lw $a0, -4($sp)
_stringconcat.loop2:
lb $a1, 0($a0)
beqz $a1, _stringconcat.end2
sb $a1, 0($v1)
addiu $a0, $a0, 1
addiu $v1, $v1, 1
j _stringconcat.loop2
_stringconcat.end2:
sb $zero, 0($v1)
move $ra, $a2
jr $ra

String.substr:
lw $a0, -12($sp)
addiu $a0, $a0, 1
li $v0, 9
syscall
move $v1, $v0
lw $a0, -4($sp)
lw $a1, -8($sp)
add $a0, $a0, $a1
lw $a2, -12($sp)
_stringsubstr.loop:
beqz $a2, _stringsubstr.end
lb $a1, 0($a0)
beqz $a1, _substrexception
sb $a1, 0($v1)
addiu $a0, $a0, 1
addiu $v1, $v1, 1
addiu $a2, $a2, -1
j _stringsubstr.loop
_stringsubstr.end:
sb $zero, 0($v1)
jr $ra


_substrexception:
la $a0, strsubstrexception
li $v0, 4
syscall
li $v0, 10
syscall


_stringcmp:
li $v0, 1
_stringcmp.loop:
lb $a2, 0($a0)
lb $a3, 0($a1)
beqz $a2, _stringcmp.end
beq $a2, $zero, _stringcmp.end
beq $a3, $zero, _stringcmp.end
bne $a2, $a3, _stringcmp.differents
addiu $a0, $a0, 1
addiu $a1, $a1, 1
j _stringcmp.loop
_stringcmp.end:
beq $a2, $a3, _stringcmp.equals
_stringcmp.differents:
li $v0, 0
jr $ra
_stringcmp.equals:
li $v0, 1
jr $ra
inherit:
beq $a0, $a1, inherit_true
beq $a0, $zero, inherit_false
lw $a0, ($a0)
j inherit
inherit_true:
li $v0, 1
jr $ra
inherit_false:
li $v0, 0
jr $ra

Object.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Object.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Object_name
jr $ra
Int.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Int.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Int_name
jr $ra
IO.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
IO.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, IO_name
jr $ra
Bool.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Bool.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Bool_name
jr $ra
String.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
String.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, String_name
jr $ra
#--------------Initial Code---------------
main:
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, Main_VT
sw $a1, ($v0)
#DispatchParent in place
#obj 2 offset 1  result Main.Constructor
la $v0, 1
jal Main.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 1  result Main.main
jal Main.main
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
j Object.abort
#--------------End Initial Code---------------
Graph.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, VList_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result VList.Constructor
la $v0, 1
jal VList.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 20($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, EList_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result EList.Constructor
la $v0, 1
jal EList.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 32($sp)
sw $t1, 8($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Graph.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Graph_name
jr $ra
Graph.add_vertice:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 4 offset 2  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 8($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 32($sp)
sw $t1, 8($t0)
#Assignment
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 3 offset 2  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 8($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 44($sp)
sw $t1, 4($t0)
lw $t0, 4($sp)
sw $t0, 32($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Graph.print_E:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 16($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Graph.print_V:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 16($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, EList_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result EList.Constructor
la $v0, 1
jal EList.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 20($sp)
sw $t1, 8($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Vertice_name
jr $ra
Vertice.outgoing:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.number:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.init:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 16($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 20($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.add_out:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 3 offset 2  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 8($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 28($sp)
sw $t1, 8($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 20($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Vertice.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 3 offset 6  result IO.out_int
jal IO.out_int
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 24($sp)
addiu $sp, $sp, 4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 24($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Edge.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Edge.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Edge_name
jr $ra
Edge.init:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 28($sp)
sw $t1, 4($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 32($sp)
sw $t1, 8($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 36($sp)
sw $t1, 12($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 20($sp)
addiu $sp, $sp, 16
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Edge.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Args: 0
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_1
sw $a0, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 6  result IO.out_string
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 24($sp)
addiu $sp, $sp, 4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 36($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 3 offset 9  result IO.out_int
jal IO.out_int
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 36($sp)
addiu $sp, $sp, 4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 44($sp)
sw $t0, 4($sp)
#Args: 0
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_2
sw $a0, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 12  result IO.out_string
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 48($sp)
addiu $sp, $sp, 4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 56($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 60($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 3 offset 15  result IO.out_int
jal IO.out_int
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 60($sp)
addiu $sp, $sp, 4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 68($sp)
sw $t0, 4($sp)
#Args: 0
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_3
sw $a0, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 18  result IO.out_string
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 72($sp)
addiu $sp, $sp, 4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 80($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 84($sp)
lw $t1, 12($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 3 offset 21  result IO.out_int
jal IO.out_int
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 84($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 76($sp)
addiu $sp, $sp, 24
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, EList_name
jr $ra
EList.isNil:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.head:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 5  result Object.abort
jal Object.abort
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.tail:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 5  result Object.abort
jal Object.abort
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.cons:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, ECons_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result ECons.Constructor
la $v0, 1
jal ECons.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 28($sp)
sw $t0, 4($sp)
#Args: 1
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 36($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 6 offset 3  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 12
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.append:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
bnez $t0, _if_4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 10  result EList.tail
jal EList.tail
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 40($sp)
addiu $sp, $sp, 0
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 4 offset 2  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 8($sp)
addiu $sp, $sp, 8
#Args: 0
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 52($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 13  result EList.head
jal EList.head
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 52($sp)
addiu $sp, $sp, 0
#Dispatch in place
#obj 7 offset 3  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 40($sp)
j _fi_4
_if_4:
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 52($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 44($sp)
_fi_4:
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
EList.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 16($sp)
sw $t0, 4($sp)
#Args: 0
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_5
sw $a0, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 5  result IO.out_string
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, ECons_name
jr $ra
ECons.isNil:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.head:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.tail:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.init:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 24($sp)
sw $t1, -4($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 28($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 12
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
ECons.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 28($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 20($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, VList_name
jr $ra
VList.isNil:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.head:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 5  result Object.abort
jal Object.abort
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.tail:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 5  result Object.abort
jal Object.abort
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.cons:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 8
syscall
sw $v0, 4($sp)
la $a1, VCons_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result VCons.Constructor
la $v0, 1
jal VCons.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 28($sp)
sw $t0, 4($sp)
#Args: 1
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 36($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 6 offset 3  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 12
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VList.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 16($sp)
sw $t0, 4($sp)
#Args: 0
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_6
sw $a0, 0($sp)
addi $sp, $sp, -4
#Dispatch in place
#obj 3 offset 5  result IO.out_string
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, VCons_name
jr $ra
VCons.isNil:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.head:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.tail:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 12($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.init:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 24($sp)
sw $t1, -4($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
lw $t1, 28($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 12
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
VCons.print:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 28($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 20($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 4
syscall
sw $v0, 4($sp)
la $a1, BoolOp_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result BoolOp.Constructor
la $v0, 1
jal BoolOp.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 20($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Parse_name
jr $ra
Parse.read_input:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#loop
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
_loop_7:
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 40($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Args: 0
#Unary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 52($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_8
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
li $t1, 1
sub $t0, $t1, $t0
sw $t0, 16($sp)
#Args: 1
#Unary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 68($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_9
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
li $t1, 1
sub $t0, $t1, $t0
sw $t0, 16($sp)
#Dispatch in place
#obj 10 offset 9  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 36($sp)
addiu $sp, $sp, 12
lw $t0, 4($sp)
bnez $t0, _body_7
j _pool_7
_body_7:
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 84($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Args: 0
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 92($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 96($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 3 offset 24  result Parse.parse_line
jal Parse.parse_line
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 96($sp)
addiu $sp, $sp, 4
#Dispatch in place
#obj 5 offset 4  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 16($sp)
addiu $sp, $sp, 8
#Assignment
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 104($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 26  result IO.in_string
jal IO.in_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 104($sp)
addiu $sp, $sp, 0
lw $t0, 4($sp)
lw $t1, 104($sp)
sw $t1, -4($t0)
lw $t0, 4($sp)
sw $t0, 32($sp)
addiu $sp, $sp, 8
addiu $sp, $sp, 8
j _loop_7
_pool_7:
lw $t0, tmp_26tmp_26tmp_26tmp_26($sp)
sw $t0, tmp_6tmp_6tmp_6tmp_6($sp)
addiu $sp, $sp, 8
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 32($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $t0, tmp_8tmp_8tmp_8tmp_8($sp)
sw $t0, tmp_3tmp_3tmp_3tmp_3($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.parse_line:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#loop
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
_loop_10:
#Unary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 44($sp)
lw $t1, 8($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
li $t1, 1
sub $t0, $t1, $t0
sw $t0, 20($sp)
lw $t0, 4($sp)
bnez $t0, _body_10
j _pool_10
_body_10:
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 76($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Args: 0
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $v0, 9
li $a0, 16
syscall
sw $v0, 4($sp)
la $a1, Edge_VT
sw $a1, ($v0)
lw $t0, 4($sp)
sw $t0, 12($sp)
#DispatchParent in place
#obj 2 offset 1  result Edge.Constructor
la $v0, 1
jal Edge.Constructor
sw $a1, 0($sp)
addi $sp, $sp, -4
addiu $sp, $sp, 8
#Args: 0
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 100($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Args: 1
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 104($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Args: 2
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 108($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 8 offset 5  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 20($sp)
addiu $sp, $sp, 16
#Dispatch in place
#obj 10 offset 9  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 36($sp)
addiu $sp, $sp, 8
lw $t0, tmp_27tmp_27tmp_27tmp_27($sp)
sw $t0, tmp_16tmp_16tmp_16tmp_16($sp)
addiu $sp, $sp, 8
lw $t0, tmp_17tmp_17tmp_17tmp_17($sp)
sw $t0, tmp_14tmp_14tmp_14tmp_14($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 12($sp)
addiu $sp, $sp, 4
addiu $sp, $sp, 8
j _loop_10
_pool_10:
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 64($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
sw $t0, 44($sp)
addiu $sp, $sp, 8
lw $t0, tmp_16tmp_16tmp_16tmp_16($sp)
sw $t0, tmp_4tmp_4tmp_4tmp_4($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.c2i:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_11
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_12
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 36($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_13
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_14
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 52($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_15
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_16
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 68($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_17
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_18
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 84($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_19
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_20
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 100($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_21
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_22
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 116($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_23
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_24
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 132($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_25
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_26
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 148($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_27
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_28
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 164($sp)
sw $t0, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_29
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_30
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 184($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 46  result Object.abort
jal Object.abort
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 184($sp)
addiu $sp, $sp, 0
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 32($sp)
j _fi_30
_if_30:
#Integer
li $a0, 9
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 36($sp)
_fi_30:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 52($sp)
j _fi_28
_if_28:
#Integer
li $a0, 8
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 56($sp)
_fi_28:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 72($sp)
j _fi_26
_if_26:
#Integer
li $a0, 7
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 76($sp)
_fi_26:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 92($sp)
j _fi_24
_if_24:
#Integer
li $a0, 6
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 96($sp)
_fi_24:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 112($sp)
j _fi_22
_if_22:
#Integer
li $a0, 5
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 116($sp)
_fi_22:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 132($sp)
j _fi_20
_if_20:
#Integer
li $a0, 4
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 136($sp)
_fi_20:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 152($sp)
j _fi_18
_if_18:
#Integer
li $a0, 3
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 156($sp)
_fi_18:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 172($sp)
j _fi_16
_if_16:
#Integer
li $a0, 2
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 176($sp)
_fi_16:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 192($sp)
j _fi_14
_if_14:
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 196($sp)
_fi_14:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 212($sp)
j _fi_12
_if_12:
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 216($sp)
_fi_12:
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.a2i:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_31
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 44($sp)
sw $t0, 4($sp)
#Args: 0
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Args: 1
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
#Dispatch in place
#obj 4 offset 3  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 12
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_32
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 24($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_33
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 72($sp)
sw $t0, 4($sp)
#Args: 0
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Args: 1
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
#Dispatch in place
#obj 4 offset 3  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 12
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_34
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 24($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_35
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 96($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 96($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 3 offset 25  result Parse.a2i_aux
jal Parse.a2i_aux
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 100($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 40($sp)
j _fi_35
_if_35:
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 108($sp)
sw $t0, 4($sp)
#Args: 0
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 112($sp)
sw $t0, 4($sp)
#Args: 0
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
#Args: 1
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 128($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
#Dispatch in place
#obj 7 offset 6  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 24($sp)
addiu $sp, $sp, 12
#Dispatch in place
#obj 9 offset 34  result Parse.a2i
jal Parse.a2i
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 136($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 76($sp)
_fi_35:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 104($sp)
j _fi_33
_if_33:
#Unary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 148($sp)
sw $t0, 4($sp)
#Args: 0
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 152($sp)
sw $t0, 4($sp)
#Args: 0
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
#Args: 1
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 168($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
#Dispatch in place
#obj 7 offset 6  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 24($sp)
addiu $sp, $sp, 12
#Dispatch in place
#obj 9 offset 44  result Parse.a2i_aux
jal Parse.a2i_aux
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 176($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
not $t0, $t0
sw $t0, 40($sp)
lw $t0, 4($sp)
sw $t0, 144($sp)
_fi_33:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 164($sp)
j _fi_31
_if_31:
#Integer
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 168($sp)
_fi_31:
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Parse.a2i_aux:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#loop
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
_loop_36:
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 52($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 56($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 8($sp)
lw $t1, 4($sp)
li $t3, 1
add $t0, $t0, $t3
sge $t0, $t1, $t0
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _body_36
j _pool_36
_body_36:
#Let
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 76($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_37
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_38
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 92($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_39
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_40
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 112($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Integer
li $a0, 10
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
mult $t0, $t1
mflo $t0
sw $t0, 12($sp)
addiu $sp, $sp, 8
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push self
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 124($sp)
sw $t0, 4($sp)
#Args: 0
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 128($sp)
sw $t0, 4($sp)
#Args: 0
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 136($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Args: 1
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
#Dispatch in place
#obj 4 offset 3  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 12
#Dispatch in place
#obj 6 offset 35  result Parse.c2i
jal Parse.c2i
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 140($sp)
addiu $sp, $sp, 4
lw $t0, 28($sp)
lw $t1, 4($sp)
add $t0, $t0, $t1
sw $t0, 40($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 140($sp)
sw $t1, -4($t0)
#Assignment
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 148($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
add $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
lw $t1, 152($sp)
sw $t1, -4($t0)
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 164($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 168($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 8($sp)
lw $t1, 4($sp)
seq $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
bnez $t0, _if_41
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_42
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 20($sp)
j _fi_41
_if_41:
#Assignment
#loading label
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
la $a0, string_43
sw $a0, 0($sp)
addi $sp, $sp, -4
lw $t0, 4($sp)
lw $t1, 176($sp)
sw $t1, 8($t0)
lw $t0, 4($sp)
sw $t0, 24($sp)
_fi_41:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 80($sp)
addiu $sp, $sp, 12
lw $t0, 4($sp)
sw $t0, 96($sp)
j _fi_40
_if_40:
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 184($sp)
sw $t0, 4($sp)
#Args: 0
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 196($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
add $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
#Args: 1
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 212($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 220($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 24($sp)
addiu $sp, $sp, 8
#Dispatch in place
#obj 11 offset 10  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 40($sp)
addiu $sp, $sp, 12
lw $t0, 4($sp)
lw $t1, 224($sp)
sw $t1, 8($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 228($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
lw $t1, 228($sp)
sw $t1, -4($t0)
lw $t0, 4($sp)
sw $t0, 52($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 148($sp)
_fi_40:
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 164($sp)
j _fi_38
_if_38:
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Assignment
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 236($sp)
sw $t0, 4($sp)
#Args: 0
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 248($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
add $t0, $t0, $t1
sw $t0, 12($sp)
addiu $sp, $sp, 8
#Args: 1
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Binary
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 264($sp)
sw $t0, 4($sp)
#Dispatch in place
#obj 2 offset 1  result String.length
jal String.length
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 272($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 16($sp)
addiu $sp, $sp, 8
#Integer
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 8($sp)
lw $t1, 4($sp)
sub $t0, $t0, $t1
sw $t0, 24($sp)
addiu $sp, $sp, 8
#Dispatch in place
#obj 11 offset 10  result String.substr
jal String.substr
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 40($sp)
addiu $sp, $sp, 12
lw $t0, 4($sp)
lw $t1, 276($sp)
sw $t1, 8($t0)
#Assignment
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 280($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
lw $t1, 280($sp)
sw $t1, -4($t0)
lw $t0, 4($sp)
sw $t0, 52($sp)
addiu $sp, $sp, 8
lw $t0, 4($sp)
sw $t0, 216($sp)
_fi_38:
addiu $sp, $sp, 8
lw $t0, tmp_70tmp_70tmp_70tmp_70($sp)
sw $t0, tmp_15tmp_15tmp_15tmp_15($sp)
addiu $sp, $sp, 8
addiu $sp, $sp, 8
j _loop_36
_pool_36:
lw $t0, tmp_16tmp_16tmp_16tmp_16($sp)
sw $t0, tmp_9tmp_9tmp_9tmp_9($sp)
addiu $sp, $sp, 8
lw $t0, tmp_10tmp_10tmp_10tmp_10($sp)
sw $t0, tmp_7tmp_7tmp_7tmp_7($sp)
addiu $sp, $sp, 8
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 36($sp)
lw $t1, -4($t0)
sw $t1, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
addiu $sp, $sp, 8
lw $t0, tmp_9tmp_9tmp_9tmp_9($sp)
sw $t0, tmp_4tmp_4tmp_4tmp_4($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Main.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Self-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Dispatch in place
#obj 1 offset 3  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 12($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
lw $t1, 12($sp)
sw $t1, 4($t0)
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
Main.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, Main_name
jr $ra
Main.main:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Block
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
#Point-Dispatch
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
#push object
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 28($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Dispatch in place
#obj 2 offset 1  result -1
jal IO.out_string
sw $a1, 0($sp)
addi $sp, $sp, 4
lw $ra, 4($sp)
addiu $sp, $sp, 4
lw $t0, 4($sp)
sw $t0, 20($sp)
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
BoolOp.Constructor:
sw $ra, 0($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
BoolOp.type_name:
sw $ra, 0($sp)
addiu $sp, $sp, -4
la $a1, BoolOp_name
jr $ra
BoolOp.and:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
bnez $t0, _if_44
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 12($sp)
j _fi_44
_if_44:
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 24($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 16($sp)
_fi_44:
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
BoolOp.or:
sw $ra, 0($sp)
addiu $sp, $sp, -4
#Condition
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
bnez $t0, _if_45
li $a0, 0
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 20($sp)
sw $t0, 4($sp)
lw $t0, 4($sp)
sw $t0, 12($sp)
j _fi_45
_if_45:
li $a0, 1
sw $a0, ($sp)
addiu $sp, $sp, -4
lw $t0, 4($sp)
sw $t0, 16($sp)
_fi_45:
addiu $sp, $sp, 8
lw $v0, 4($sp)
addiu $sp, $sp, -4
addiu $sp, $sp, -4
jr $ra
li $v0, 10
syscall
